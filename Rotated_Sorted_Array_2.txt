def search_rotated_sorted(arr,target):
    # FOR NON UNIQUE ELEMENTS 
    n = len(arr)
    low = 0
    high = n-1

    while(low <= high):
        mid = (low+high)//2
        if (arr[mid] == target):
            return mid
        
        # For edge-case when element at low = mid = high    
        if(arr[low] == arr[mid] and arr[mid] == arr[high]):
            low = low + 1
            high = high - 1
            continue
        
        # Means left side is sorted    
        if (arr[low] <= arr[mid]):
            if(arr[low] <= target and arr[mid] >= target):
                high = mid-1
            else:
                low = mid + 1
                
        # Means right side is sorted    
        else:
            if(arr[mid] <= target and arr[high] >= target):
                low = mid + 1
            else:
                high = mid - 1
    return -1

arr = [3,3,1,2,3,3,3,3]
target = 3
print(search_rotated_sorted(arr,target))
