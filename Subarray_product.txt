def subarray_product1(arr,n):
    #OPTIMAL SOLN
    prefix = 1 
    suffix = 1
    maxi = -999999
    for i in range(n):
        if (prefix == 0):
            prefix = 1
        if (suffix == 0):
            suffix =1
        prefix =  prefix*arr[i]    
        suffix =  suffix*arr[n-i-1]
        maxi = max(maxi,max(prefix,suffix))
    return maxi    
        
def subarray_product(arr,n):
    #BRUTE SOLN
    max_product = -999999
    for i in range(n):
        p = 1
        for j in range(i,n):
            p = p*arr[j]
            max_product = max(max_product,p)
    return max_product
    
def kadane(arr,n):    
#NOT AN INTUITIVE APPROACH , AVOID IN AN INTERVIEW
    p = 1
    maxi = -999999
    start = -1
    end = -1
    for i in range(n):
        if (p == 0):
            p=1
            
        p = p * arr[i]
        if(p > maxi):
            maxi = p
            ans_start = start
            ans_end = i
            
        if(p < 0):
            start = i+1
            p = 1
    return [ans_start,ans_end] # returns the indexes
    
    # if(maxi < 0):
    #     return []
    # return maxi      
arr = [1,2,3,4,5,-1,6,8,10]    
n= len(arr)
print(kadane(arr,n))